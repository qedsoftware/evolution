# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-04-17 08:57
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DataGrader',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.FileField(blank=True, null=True, upload_to='')),
                ('time_limit_ms', models.IntegerField(default=1000)),
                ('memory_limit_bytes', models.IntegerField(default=134217728)),
            ],
        ),
        migrations.CreateModel(
            name='GradingAttempt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('finished_at', models.DateTimeField(null=True)),
                ('started', models.BooleanField(default=False)),
                ('finished', models.BooleanField(default=False)),
                ('succeeded', models.BooleanField(default=False)),
                ('aborted', models.BooleanField(default=False)),
                ('log', models.FileField(upload_to='')),
                ('score', models.DecimalField(decimal_places=6, max_digits=30, null=True)),
                ('scoring_status', models.CharField(choices=[('waiting', 'Waiting for score'), ('error', 'Grading Error'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], default='waiting', max_length=20)),
                ('scoring_msg', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='ScoringScript',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.FileField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('output', models.FileField(null=True, upload_to='')),
                ('needs_grading', models.BooleanField(default=False)),
                ('needs_grading_at', models.DateTimeField(null=True)),
                ('score', models.DecimalField(decimal_places=6, max_digits=30, null=True)),
                ('scoring_status', models.CharField(choices=[('waiting', 'Waiting for score'), ('error', 'Grading Error'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], default='waiting', max_length=20)),
                ('scoring_msg', models.TextField(blank=True, default='')),
                ('current_attempt', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='grading.GradingAttempt')),
                ('grader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grading.DataGrader')),
            ],
        ),
        migrations.AddField(
            model_name='gradingattempt',
            name='submission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='grading.Submission'),
        ),
        migrations.AddField(
            model_name='datagrader',
            name='scoring_script',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='grading.ScoringScript'),
        ),
    ]
